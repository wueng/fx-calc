'use strict';angular.module('fxCalc',[]),angular.module('fxCalc').run(['$templateCache',function(a){a.put('page.html','<div class = "container fxCalc"> <div class = "row"> <!-- Define a couple of collumns --> <!-- From currency --> <div class = "col-xs-12 col-sm-6 collumn"> <div class = "row"> <!-- Select boxes --> <div class = "form-group"> <span>To country</span> <select class = "form-control" data-ng-if = "currencies" data-ng-model = "selectedCurrencies.fromCurrency" data-ng-options = "currency as currency.countryName for currency in ::currencies track by currency.countryNumericCode" data-required = "true" data-ng-change = "onCurrencyChanged()"> <option value = "">From country</option> </select> </div> <!-- Amount to be sent --> <div class = "form-group" data-ng-if = "selectedCurrencies.fromCurrency && selectedCurrencies.toCurrency"> <span>Amount to be sent</span> <div class="input-group"> <input class = "form-control" type = "number" inputmode = "decimal" min = "0" ng-pattern = "" data-ng-model = "selectedCurrencies.fromCurrency.amount" data-ng-pattern = d*([.,]d{0,2})? data-ng-change = "onAmountChanged(\'fromCurrency\')"/> <div class="input-group-append"> <span class="input-group-text" data-ng-bind = "selectedCurrencies.fromCurrency.currencySymbol"></span> </div> </div> </div> </div> </div> <!-- To currency --> <div class = "col-xs-12 col-sm-6 collumn"> <div class = "row"> <!-- Select box --> <div class = "form-group"> <span>To country</span> <select class = "form-control" data-ng-if = "currencies" data-ng-model = "selectedCurrencies.toCurrency" data-ng-options = "currency as currency.countryName for currency in ::currencies track by currency.countryNumericCode" data-required = "true" data-ng-change = "onCurrencyChanged()"> <option value = "">To country</option> </select> </div> <!-- Amount to be sent --> <div class = "form-group" data-ng-if = "selectedCurrencies.fromCurrency && selectedCurrencies.toCurrency"> <span>Amount to be received</span> <div class="input-group"> <input class = "form-control" type = "number" inputmode = "decimal" min = "0" ng-pattern = "" data-ng-model = "selectedCurrencies.toCurrency.amount" data-ng-pattern = d*([.,]d{0,2})? data-ng-change = "onAmountChanged(\'toCurrency\')"/> <div class="input-group-append"> <span class="input-group-text" data-ng-bind = "selectedCurrencies.toCurrency.currencySymbol"></span> </div> </div> </div> </div> </div> </div> </div>')}]),angular.module('fxCalc').service('exchangeRateService',['$http',function(a){this.getExchangeRate=function(c,d){return a({url:'http://data.fixer.io/api/latest',method:'GET',params:{access_key:'f2cb681e88d201249423de1ac3b87bbf',base:'EUR',symbols:c+','+d},cache:!0})}}]),angular.module('fxCalc').service('countryService',['$http',function(a){this.getCountryList=function(){return a({url:'https://restcountries.eu/rest/v2/all',method:'GET',cache:!0})}}]),angular.module('fxCalc').factory('currencyFactory',['$q','exchangeRateService',function(a,b){class d{constructor(e){this.countryNumericCode=e.numericCode,this.countryName=e.name,this.currencyCode=e.currencies[0].code,this.currencyName=e.currencies[0].name,this.currencySymbol=e.currencies[0].symbol,this.amount=0}convertTo(e){var f=this;return b.getExchangeRate(f.currencyCode,e).then(function(g){let h=g.data.rates;return parseFloat((f.amount/h[f.currencyCode]*h[e]).toFixed(2))}).catch(function(g){return console.log('Caught exception while converting amounts'),console.log(g),a.reject(g)})}}return{constructCurrencyList:function(e){var f=[];return e.forEach(g=>{0<g.currencies.length&&f.push(new d(g))}),f}}}]),angular.module('fxCalc').controller('pageController',['$scope','countryService','currencyFactory',function(a,b,c){a.currencies,a.selectedCurrencies={fromCurrency:null,toCurrency:null},a.pageOptions={pageReady:!1},a.onCurrencyChanged=function(){a.selectedCurrencies.fromCurrency&&a.selectedCurrencies.toCurrency&&a.selectedCurrencies.fromCurrency.convertTo(a.selectedCurrencies.toCurrency.currencyCode).then(function(d){a.selectedCurrencies.toCurrency.amount=d})},a.onAmountChanged=function(d){if(a.selectedCurrencies.fromCurrency&&a.selectedCurrencies.toCurrency){var e,f;for(var g in a.selectedCurrencies)g===d?f=a.selectedCurrencies[g]:e=a.selectedCurrencies[g];f.convertTo(e.currencyCode).then(function(h){e.amount=h})}},this.$onInit=function(){b.getCountryList().then(function(d){a.currencies=c.constructCurrencyList(d.data)}).catch(function(d){console.log('An exception was caught while trying to fetch country data'),console.log(d)})}}]);